export const SMART_VAULT_ABI = [
  {
    inputs: [
      { internalType: 'bytes32', name: '_vaultSchema', type: 'bytes32' },
      { internalType: 'bytes32', name: '_contributeSchema', type: 'bytes32' },
      { internalType: 'bytes32', name: '_claimSchema', type: 'bytes32' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AttestationNotFound', type: 'error' },
  { inputs: [], name: 'AttestationRevoked', type: 'error' },
  { inputs: [], name: 'ClaimDataInvalid', type: 'error' },
  { inputs: [], name: 'ClaimNotStarted', type: 'error' },
  { inputs: [], name: 'Claimed', type: 'error' },
  { inputs: [], name: 'ContributeEnded', type: 'error' },
  { inputs: [], name: 'ContributeNotStarted', type: 'error' },
  { inputs: [], name: 'ContributeTimeInvalid', type: 'error' },
  { inputs: [], name: 'Finished', type: 'error' },
  { inputs: [], name: 'NameEmpty', type: 'error' },
  { inputs: [], name: 'RulesLengthMismatch', type: 'error' },
  { inputs: [], name: 'VaultNotFound', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'vaultId', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'validatedAttestion', type: 'bytes32' },
      { indexed: true, internalType: 'bytes32', name: 'claimAttestation', type: 'bytes32' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'Claim',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'vaultId', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'contributor', type: 'address' },
      { indexed: true, internalType: 'bytes32', name: 'contributionAttestation', type: 'bytes32' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'Contribute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'bytes32', name: 'vaultId', type: 'bytes32' }],
    name: 'CreateVault',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'vaultId', type: 'bytes32' },
      { internalType: 'bytes32', name: 'attestionUID', type: 'bytes32' },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimSchema',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'vaultId', type: 'bytes32' }],
    name: 'contribute',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contributeSchema',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'description', type: 'string' },
      { internalType: 'uint256', name: 'contributeStart', type: 'uint256' },
      { internalType: 'uint256', name: 'contributeEnd', type: 'uint256' },
      { internalType: 'bytes32', name: 'validationSchema', type: 'bytes32' },
      { internalType: 'address[]', name: 'attesters', type: 'address[]' },
      { internalType: 'enum Operator[]', name: 'operators', type: 'uint8[]' },
      { internalType: 'bytes[]', name: 'thresholds', type: 'bytes[]' },
      {
        components: [
          { internalType: 'enum ClaimType', name: 'claimType', type: 'uint8' },
          { internalType: 'uint256', name: 'fixedAmount', type: 'uint256' },
          { internalType: 'uint256', name: 'percentage', type: 'uint256' },
          { internalType: 'bytes', name: 'customData', type: 'bytes' },
        ],
        internalType: 'struct ClaimData',
        name: 'claimData',
        type: 'tuple',
      },
    ],
    name: 'createVault',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'vaultId', type: 'bytes32' }],
    name: 'getRules',
    outputs: [
      { internalType: 'enum Type[]', name: '', type: 'uint8[]' },
      { internalType: 'enum Operator[]', name: '', type: 'uint8[]' },
      { internalType: 'bytes[]', name: '', type: 'bytes[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'vaultId', type: 'bytes32' },
      { internalType: 'bytes32', name: 'attestionUID', type: 'bytes32' },
    ],
    name: 'isClaimed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'vaultId', type: 'bytes32' }],
    name: 'vaultBalance',
    outputs: [{ internalType: 'uint256', name: 'balance', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'vaultId', type: 'bytes32' }],
    name: 'vaultRaised',
    outputs: [{ internalType: 'uint256', name: 'raised', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultSchema',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
] as const;
